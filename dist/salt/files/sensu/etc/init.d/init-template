#!/bin/sh

{% set daemon_path = salt['cmd.run']("gem contents sensu"
                                    + (" sensu-dashboard" if part == "sensu-dashboard" else "")
                                    + " | grep bin/" + part ) %}

DAEMON={{ daemon_path }}
NAME={{ part }}
DESC="sensu {{ part }}"
HOST=$(hostname -s)

test -x $DAEMON || exit 0

LOGFILE=/var/log/sensu/$NAME.log
PIDFILE=/var/run/$NAME.pid
DODTIME=4

DAEMON_OPTS="-b -p $PIDFILE -l $LOGFILE -c /etc/sensu/$NAME-$HOST.conf"

set -e

running_pid()
{
    # Check if a given process pid's cmdline matches a given name
    pid=$1
    name=$2
    [ -z "$pid" ] && return 1
    [ ! -d /proc/$pid ] &&  return 1
    (cat /proc/$pid/cmdline | tr "\000" "\n"|grep -q $name) || return 1
    return 0
}

running()
{
# Check if the process is running looking at /proc
# (works for all users)

    # No pidfile, probably no daemon present
    [ ! -f "$PIDFILE" ] && return 1
    # Obtain the pid and check it against the binary name
    pid=`cat $PIDFILE`
    running_pid $pid $DAEMON || return 1
    return 0
}

force_stop() {
# Forcefully kill the process
    [ ! -f "$PIDFILE" ] && return
    if running ; then
        kill -15 $pid
        # Is it really dead?
        [ -n "$DODTIME" ] && sleep "$DODTIME"s
        if running ; then
            kill -9 $pid
            [ -n "$DODTIME" ] && sleep "$DODTIME"s
            if running ; then
                echo "Cannot kill $NAME (pid=$pid)!"
                exit 1
            fi
        fi
    fi
    rm -f $PIDFILE
    return 0
}

case "$1" in
  start)
        echo -n "Starting $DESC: "
        if running ; then
            echo "$NAME already running!"
        else
            start-stop-daemon --start --quiet --pidfile $PIDFILE \
                    --startas $DAEMON -- $DAEMON_OPTS
            sleep 1
            if running ; then
                echo "$NAME."
            else
                echo " ERROR."
            fi
        fi
	;;
  stop)
	echo -n "Stopping $DESC: "
	start-stop-daemon --stop --retry $DODTIME --quiet --oknodo --pidfile $PIDFILE
	echo "$NAME."
	;;
  force-stop)
	echo -n "Forcefully stopping $DESC: "
        force_stop
        if ! running ; then
            echo "$NAME."
        else
            echo " ERROR."
        fi
	;;
  force-reload)
	#
	#	If the "reload" option is implemented, move the "force-reload"
	#	option to the "reload" entry above. If not, "force-reload" is
	#	just the same as "restart" except that it does nothing if the
	#   daemon isn't already running.
	# check wether $DAEMON is running. If so, restart
        start-stop-daemon --stop --test --quiet --pidfile $PIDFILE \
                --startas $DAEMON \
	&& $0 start || exit 0
        ;;
  restart)
    echo -n "Restarting $DESC: "
        start-stop-daemon --stop --quiet --oknodo --pidfile $PIDFILE 
	[ -n "$DODTIME" ] && sleep $DODTIME
        start-stop-daemon --start --quiet --pidfile $PIDFILE \
                 --startas $DAEMON -- $DAEMON_OPTS
	echo "$NAME."
	;;
  status)
    echo -n "$NAME is "
    if running ;  then
        echo "running"
    else
        echo "not running."
        exit 1
    fi
    ;;
  *)
	N=/etc/init.d/$NAME
	echo "Usage: $N {start|stop|restart|status|force-stop}" >&2
	exit 1
	;;
esac

exit 0
